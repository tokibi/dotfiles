#!/bin/sh
# modifiers and literals: https://github.com/koekeishiya/skhd/issues/1
# yabai commands: https://github.com/koekeishiya/yabai/wiki/Commands
# refs:
# - https://github.com/hackorum/.dotfiles/blob/macos/skhd/.config/skhd/skhdrc
# - https://blog.64p.org/entry/2022/06/03/001135
# -

#
# A hotkey is written according to the following rules:
#
#   hotkey       = <mode> '<' <action> | <action>
#
#   mode         = 'name of mode' | <mode> ',' <mode>
#
#   action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                  <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                  <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#   keysym       = <mod> '-' <key> | <key>
#
#   mod          = 'modifier keyword' | <mod> '+' <mod>
#
#   key          = <literal> | <keycode>
#
#   literal      = 'single letter or built-in keyword'
#
#   keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#   proc_map_lst = * <proc_map>
#
#   proc_map     = <string> ':' <command> | <string>     '~' |
#                  '*'      ':' <command> | '*'          '~'
#
#   string       = '"' 'sequence of characters' '"'
#
#   command      = command is executed through '$SHELL -c' and
#                  follows valid shell syntax. if the $SHELL environment
#                  variable is not set, it will default to '/bin/bash'.
#                  when bash is used, the ';' delimeter can be specified
#                  to chain commands.
#
#                  to allow a command to extend into multiple lines,
#                  prepend '\' at the end of the previous line.
#
#                  an EOL character signifies the end of the bind.
#
#   ->           = keypress is not consumed by skhd
#
#   *            = matches every application not specified in <proc_map_lst>
#
#   ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
# A mode is declared according to the following rules:
#
#   mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#               '::' <name> '@'               | '::' <name>
#
#   name      = desired name for this mode,
#
#   @         = capture keypresses regardless of being bound to an action
#
#   command   = command is executed through '$SHELL -c' and
#               follows valid shell syntax. if the $SHELL environment
#               variable is not set, it will default to '/bin/bash'.
#               when bash is used, the ';' delimeter can be specified
#               to chain commands.
#
#               to allow a command to extend into multiple lines,
#               prepend '\' at the end of the previous line.
#
#               an EOL character signifies the end of the bind.
#

:: default : yabai -m config active_window_border_color 0xfff5a97f
:: app :     yabai -m config active_window_border_color 0xffdc143c

# restart
fn + cmd - q : \
        /usr/bin/env osascript <<< 'display notification "Restarting Yabai" with title "Yabai"'; \
        brew services restart yabai
fn + cmd - r : \
        /usr/bin/env osascript <<< 'display notification "Restarting skhd" with title "skhd"'; \
        brew services restart skhd

# toggle fullscreen
fn - f : yabai -m window --toggle zoom-fullscreen
fn - e : yabai -m window --toggle zoom-parent

fn - y: ~/.config/yabai/bin/ensure-focus-window.sh

# focus window
# (If there is a window that is full-screened, disable it.)
fn - h : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/ensure-focus-window.sh && \
         (yabai -m window --focus west || yabai -m display --focus west)
fn - j : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/ensure-focus-window.sh && \
         (yabai -m window --focus south || yabai -m display --focus south)
fn - k : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/ensure-focus-window.sh && \
         (yabai -m window --focus north || yabai -m display --focus north)
fn - l : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/ensure-focus-window.sh && \
         (yabai -m window --focus east || yabai -m display --focus east)

# create and focus space
fn + cmd - t : \
        yabai -m space --create && \
        index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
        yabai -m space --focus "${index}"
# destroy space
fn + cmd - w : yabai -m space --destroy

# fast focus desktop
fn - p : yabai -m space --focus prev
fn - n : yabai -m space --focus next
fn - 1 : yabai -m space --focus 1
fn - 2 : yabai -m space --focus 2
fn - 3 : yabai -m space --focus 3
fn - 4 : yabai -m space --focus 4
fn - 5 : yabai -m space --focus 5
fn - 6 : yabai -m space --focus 6
fn - 7 : yabai -m space --focus 7
fn - 8 : yabai -m space --focus 8
fn - 9 : yabai -m space --focus 9

# send window to desktop and follow focus
fn + cmd - p : yabai -m window --space prev; sketchybar --trigger windows_on_spaces
fn + cmd - n : yabai -m window --space next; sketchybar --trigger windows_on_spaces
fn + cmd - 1 : yabai -m window --space  1; sketchybar --trigger windows_on_spaces
fn + cmd - 2 : yabai -m window --space  2; sketchybar --trigger windows_on_spaces
fn + cmd - 3 : yabai -m window --space  3; sketchybar --trigger windows_on_spaces
fn + cmd - 4 : yabai -m window --space  4; sketchybar --trigger windows_on_spaces
fn + cmd - 5 : yabai -m window --space  5; sketchybar --trigger windows_on_spaces
fn + cmd - 6 : yabai -m window --space  6; sketchybar --trigger windows_on_spaces
fn + cmd - 7 : yabai -m window --space  7; sketchybar --trigger windows_on_spaces
fn + cmd - 8 : yabai -m window --space  8; sketchybar --trigger windows_on_spaces
fn + cmd - 9 : yabai -m window --space  9; sketchybar --trigger windows_on_spaces

# swap window
fn + cmd - h : yabai -m window --swap west
fn + cmd - j : yabai -m window --swap south
fn + cmd - k : yabai -m window --swap north
fn + cmd - l : yabai -m window --swap east

# swap space
fn + shift - 1 : yabai -m space --swap 1; sketchybar --trigger windows_on_spaces
fn + shift - 2 : yabai -m space --swap 2; sketchybar --trigger windows_on_spaces
fn + shift - 3 : yabai -m space --swap 3; sketchybar --trigger windows_on_spaces
fn + shift - 4 : yabai -m space --swap 4; sketchybar --trigger windows_on_spaces
fn + shift - 5 : yabai -m space --swap 5; sketchybar --trigger windows_on_spaces
fn + shift - 6 : yabai -m space --swap 6; sketchybar --trigger windows_on_spaces
fn + shift - 7 : yabai -m space --swap 7; sketchybar --trigger windows_on_spaces
fn + shift - 8 : yabai -m space --swap 8; sketchybar --trigger windows_on_spaces
fn + shift - 9 : yabai -m space --swap 9; sketchybar --trigger windows_on_spaces

# balance size of windows
fn - b : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/disable-float.sh && \
         yabai -m space --balance

# increase window size
fn - w : yabai -m window --resize top:0:-40
fn - a : yabai -m window --resize left:-40:0
fn - s : yabai -m window --resize bottom:0:40
fn - d : yabai -m window --resize right:40:0

# decrease window size
# fn + cmd - w : yabai -m window --resize top:0:20
# fn + cmd - a : yabai -m window --resize left:20:0
# fn + cmd - s : yabai -m window --resize bottom:0:-20
# fn + cmd - d : yabai -m window --resize right:-20:0

# rotate tree
fn - r : yabai -m space --rotate 180

# float / unfloat window and center on screen
fn - t : yabai -m window --toggle float --grid 1:10:2:0:6:1

# app mode
fn - o ; app
app < fn - o ; default
app < escape ; default
app < t : open -na /opt/homebrew/bin/wezterm; skhd -k "escape"
app < s : open -na Slack; skhd -k "escape"
app < n : open -na Notion; skhd -k "escape"
app < c : open -na Google\ Chrome; skhd -k "escape"
app < g : open -na Gather; skhd -k "escape"


# restart
rshift+ralt + cmd - q : \
        /usr/bin/env osascript <<< 'display notification "Restarting Yabai" with title "Yabai"'; \
        brew services restart yabai
rshift+ralt + cmd - r : \
        /usr/bin/env osascript <<< 'display notification "Restarting skhd" with title "skhd"'; \
        brew services restart skhd

# toggle fullscreen
rshift+ralt - f : yabai -m window --toggle zoom-fullscreen
rshift+ralt - e : yabai -m window --toggle zoom-parent

rshift+ralt - y: ~/.config/yabai/bin/ensure-focus-window.sh

# focus window
# (If there is a window that is full-screened, disable it.)
rshift+ralt - h : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/ensure-focus-window.sh && \
                 (yabai -m window --focus west || yabai -m display --focus west)
rshift+ralt - j : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/ensure-focus-window.sh && \
         (yabai -m window --focus south || yabai -m display --focus south)
rshift+ralt - k : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/ensure-focus-window.sh && \
         (yabai -m window --focus north || yabai -m display --focus north)
rshift+ralt - l : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/ensure-focus-window.sh && \
         (yabai -m window --focus east || yabai -m display --focus east)

# create and focus space
rshift+ralt + cmd - t : \
        yabai -m space --create && \
        index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
        yabai -m space --focus "${index}"
# destroy space
rshift+ralt + cmd - w : yabai -m space --destroy

# fast focus desktop
rshift+ralt - p : yabai -m space --focus prev
rshift+ralt - n : yabai -m space --focus next
rshift+ralt - 1 : yabai -m space --focus 1
rshift+ralt - 2 : yabai -m space --focus 2
rshift+ralt - 3 : yabai -m space --focus 3
rshift+ralt - 4 : yabai -m space --focus 4
rshift+ralt - 5 : yabai -m space --focus 5
rshift+ralt - 6 : yabai -m space --focus 6
rshift+ralt - 7 : yabai -m space --focus 7
rshift+ralt - 8 : yabai -m space --focus 8
rshift+ralt - 9 : yabai -m space --focus 9

# send window to desktop and follow focus
rshift+ralt + cmd - p : yabai -m window --space prev; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - n : yabai -m window --space next; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - 1 : yabai -m window --space  1; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - 2 : yabai -m window --space  2; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - 3 : yabai -m window --space  3; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - 4 : yabai -m window --space  4; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - 5 : yabai -m window --space  5; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - 6 : yabai -m window --space  6; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - 7 : yabai -m window --space  7; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - 8 : yabai -m window --space  8; sketchybar --trigger windows_on_spaces
rshift+ralt + cmd - 9 : yabai -m window --space  9; sketchybar --trigger windows_on_spaces

# swap window
rshift+ralt + cmd - h : yabai -m window --swap west
rshift+ralt + cmd - j : yabai -m window --swap south
rshift+ralt + cmd - k : yabai -m window --swap north
rshift+ralt + cmd - l : yabai -m window --swap east

# swap space
rshift+ralt + shift - 1 : yabai -m space --swap 1; sketchybar --trigger windows_on_spaces
rshift+ralt + shift - 2 : yabai -m space --swap 2; sketchybar --trigger windows_on_spaces
rshift+ralt + shift - 3 : yabai -m space --swap 3; sketchybar --trigger windows_on_spaces
rshift+ralt + shift - 4 : yabai -m space --swap 4; sketchybar --trigger windows_on_spaces
rshift+ralt + shift - 5 : yabai -m space --swap 5; sketchybar --trigger windows_on_spaces
rshift+ralt + shift - 6 : yabai -m space --swap 6; sketchybar --trigger windows_on_spaces
rshift+ralt + shift - 7 : yabai -m space --swap 7; sketchybar --trigger windows_on_spaces
rshift+ralt + shift - 8 : yabai -m space --swap 8; sketchybar --trigger windows_on_spaces
rshift+ralt + shift - 9 : yabai -m space --swap 9; sketchybar --trigger windows_on_spaces

# balance size of windows
rshift+ralt - b : ~/.config/yabai/bin/disable-fullscreen.sh && \
         ~/.config/yabai/bin/disable-float.sh && \
         yabai -m space --balance

# increase window size
rshift+ralt - w : yabai -m window --resize top:0:-40
rshift+ralt - a : yabai -m window --resize left:-40:0
rshift+ralt - s : yabai -m window --resize bottom:0:40
rshift+ralt - d : yabai -m window --resize right:40:0

# decrease window size
# rshift+ralt + cmd - w : yabai -m window --resize top:0:20
# rshift+ralt + cmd - a : yabai -m window --resize left:20:0
# rshift+ralt + cmd - s : yabai -m window --resize bottom:0:-20
# rshift+ralt + cmd - d : yabai -m window --resize right:-20:0

# rotate tree
rshift+ralt - r : yabai -m space --rotate 90

# float / unfloat window and center on screen
rshift+ralt - t : yabai -m window --toggle float --grid 1:10:2:0:6:1

# app mode
rshift+ralt - o ; app
